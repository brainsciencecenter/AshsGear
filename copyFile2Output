#!/bin/bash

CmdName=$(basename "$0")
Syntax="${CmdName} [-n][-v] [-c ConfigJsonFile][-i IdString][-o OutputDir][-t tags]{-a AtlasName} {file}"

while getopts a:c:i:no:t:v arg
do
    case "$arg" in
	a|c|i|n|o|t|v)
	    eval "opt_${arg}='${OPTARG:=1}'"
	    ;;
    esac
done
shift $(( "$OPTIND" - 1 ))

if [ -n "$opt_a" ]
then
    Atlas="$opt_a"
else
    echo "${CmdName} : missing -a AtlasName" 1>&2
    exit 1
fi

if [ -n "$opt_c" ]
then
        ConfigJsonFile="$opt_c"
else
	ConfigJsonFile=config.json
fi

if [ -n "$opt_o" ]
then
    OutputDir="$opt_o"
else
    OutputDir=/flywheel/v0/output
fi

#
# add a leading ',' so if there aren't any tags, [ "footag" ${ArgTags} ] is valid json
# 
[ -n "$opt_t" ] && ArgTags=$(echo $opt_t | sed 's/,/","/g; s/^/,"/; s/$/"/')

AshsFile="$1"

read GearName GearVersion GearId < <(jq -r '.job.gear_info | [ .name, .version, .id ] | join(" ")' "$ConfigJsonFile")
[ -n "$opt_v" ] && echo "$GearName $GearVersion $GearId" 1>&2

# because filenames can have spaces
T1Filename=$(jq -r '.inputs.T1w.location.name' "$ConfigJsonFile")
T1FileId=$(jq -r '.inputs.T1w.object.file_id' "$ConfigJsonFile")
T2Filename=$(jq -r '.inputs.T2w.location.name' "$ConfigJsonFile")
T2FileId=$(jq -r '.inputs.T2w.object.file_id' "$ConfigJsonFile")
AnalysisId=$(jq -r '.destination.id' "$ConfigJsonFile")

# Also known as the Id in other parts of the uploading process
if [ -n "$opt_i" ]
then
    BaseFilename="$opt_i"
else
    BaseFilename=$(basename "$T1Filename" .nii.gz)
fi

function sys {
    [ -n "${opt_n}${opt_v}" ] && echo "$@" 1>&2
    [ -n "$opt_n" ] || "$@"
}

case "$AshsFile" in 
     *tse.nii.gz)
	OutputFilename="${BaseFilename}_${Atlas}_highresmri.nii.gz"
	OutputFilePath="${OutputDir}/${OutputFilename}"
	sys cp "$AshsFile" "$OutputFilePath"

	OutputJson="{
		\"OutputFilename\": \"$OutputFilename\"
              , \"Modality\": \"MR\"
	      , \"Tags\": [ \"HighResMri\" ${ArgTags} ]
	}"
	;;

     *mprage.nii.gz)
	OutputFilename="${BaseFilename}_${Atlas}_mprage.nii.gz"
	OutputFilePath="${OutputDir}/${OutputFilename}"
	sys cp "$AshsFile" "$OutputFilePath"

	OutputJson="{
		\"OutputFilename\": \"$OutputFilename\"
	}"
	;;

    *final/*_lfseg*.nii.gz)
	if (echo "$AshsFile" | grep -q -i 'right') 
	then
		Handedness=Right
	elif (echo "$AshsFile" | grep -q -i 'left') 
	then
		Handedness=Left
	fi

	case "$AshsFile" in
		*lfseg_heur*)
			SegmentationTag=Heur
			;;

		*lfseg_corr_usegray*)
			SegmentationTag=UseGray
			;;

		*lfseg_corr_nogray*)
			SegmentationTag=NoGray
			;;
	esac

	if [ "$Atlas" == "ASHS-ICV" ]
	then
		OutputFilename="${BaseFilename}_${Atlas}_icv.nii.gz"
	else
		FileSuffix=$(echo "$AshsFile" | sed -E 's/^.*(left|right)_(.*)(.nii.gz)/\2_\1\3/')
		OutputFilename="${BaseFilename}_${Atlas}_${FileSuffix}"
	fi
	OutputFilePath="${OutputDir}/${OutputFilename}"

	sys cp "$AshsFile" "$OutputFilePath"

        CustomJson="{
	      	      	      	      \"GearName\": \"$GearName\"
		    		    , \"GearVersion\": \"$GearVersion\"
		    		    , \"GearId\": \"$GearId\"
		    		    , \"AnalysisId\": \"$AnalysisId\"
		    		    , \"Atlas\": \"$Atlas\"
		    		    , \"T1Input\": {
	                 	           \"FileName\": \"$T1Filename\"
	       		 		 , \"FileId\": \"$T1FileId\"
	       		 		 , \"FlywheelPath\": \"$T1FlywheelPath\"
		                      }
		    		    , \"T2Input\": {
		           	           \"FileName\": \"$T2Filename\"
			 		 , \"FileId\": \"$T2FileId\"
	       		 		 , \"FlywheelPath\": \"$T2FlywheelPath\"
				      }
	}"

	CustomJsonString=$(echo "$CustomJson" | jq --compact-output . | sed 's/"/\\"/g')
	OutputJson="{
		\"OutputFilename\": \"$OutputFilename\",
		\"Metadata\": {
			        \"modality\": \"SEG\"
			      , \"tags\": [ \"${Handedness}\", \"${SegmentationTag}\",  \"${Atlas}\" ${ArgTags} ]
			      , \"classification\": {
			      	     \"Custom\": [ \"${CustomJsonString}\" ]
		                }
		 }
	}"
	;;

     *final/*bootstrap*.txt)
	FileSuffix=$(echo "$AshsFile" | sed -E 's/^.*(left|right)_(.*)_(volumes.*)$/\2_\1_\3/')
	OutputFilename="${BaseFilename}_${Atlas}_${FileSuffix}"
	OutputFilePath="${OutputDir}/${OutputFilename}"

	sys cp "$AshsFile" "$OutputFilePath"
	OutputJson="{
		\"OutputFilename\": \"$OutputFilename\"
	}"
	;;

     *affine_t1_to_template/greedy_t1_to_template.mat)
	OutputFilename="${BaseFilename}_${Atlas}_greedy.mat"
	OutputFilePath="${OutputDir}/${OutputFilename}"

	sys cp "$AshsFile" "$OutputFilePath"
	OutputJson="{
		\"OutputFilename\": \"$OutputFilename\"
	}"
	;;

     *flirt*/flirt*.mat)
	FileSuffix=$(echo "$AshsFile" | sed -E 's,^.*/,,; s/_t2_to_t1//')
	OutputFilename="${BaseFilename}_${Atlas}_${FileSuffix}"
	OutputFilePath="${OutputDir}/${OutputFilename}"

	sys cp "$AshsFile" "$OutputFilePath"
	OutputJson="{
		\"OutputFilename\": \"$OutputFilename\"
	}"
	;;

esac

echo "$OutputJson" 
