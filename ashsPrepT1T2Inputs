#!/bin/bash

#
# Takes T1 and T2 dicom/niftis
#
# If needed converts both inputs to niftis
# T1 input has the neck trimmed
# T1 and T2 files are copied into /tmp/Ashs-(T1|T2)-XXXXXXXX.nii.gz filenames
#   so ashs_main won't get upset
#
# Returns
#   T1.nii.gz
#   T2.nii.gz
#   T1-trimmed.nii.gz
#   T1-trimmed-sanitized.nii.gz
#   T2-sanitized.nii.gz
#
# T1/T2 nifti and nifti trimmed files will have the same base names as the T1/T2 input files.
# T1/T2 sanitized files will be arbitrary file names so they can be assured to be ashs_main.sh acceptable
#

function sys {
    [ -n "${opt_n}${opt_v}" ] && echo "$(date): $@" 1>&2
    [ -n "$opt_n" ] || "$@"
}

function niftiIfNeeded {
    local InputFile="$1"
    local NiftiFile
    
    # Convert to nifi if needed
    if echo "$InputFile" | grep -q ".nii.gz$"
    then
        NiftiFile="$InputFile"
    elif echo "$InputFile" | grep -q '.nii$'
    then
	gzip "$InputFile"
	NiftiFile="${InputFile}.gz"
    elif file "$InputFile" | grep -q "Zip archive data"
    then
        DicomDir=$(mktemp -d "${TmpDir}/DicomDir-XXXXXXX")
        [ -d "$DicomDir" ] || mkdir -p "$DicomDir"

        NiftiFile="${TmpDir}/$(basename "$InputFile" | sed 's/.zip$//; s/.dicom//; s/$/.nii.gz/')"
        sys unzip -qq -j -d "$DicomDir" "$InputFile" 
        SeriesID="$(sys c3d -dicom-series-list "$DicomDir" | tail -n 1 | awk '{print $NF}')"

        # -dicom takes two arguments so  -o follows 
        sys c3d -dicom-series-read "$DicomDir" "$SeriesID" -o "$NiftiFile" 
        rm -rf "$DicomDir"
    else
        echo "$cmd : Unrecognized input type '$InputFile'" 1>&2
        exit 1
    fi

    realpath "$NiftiFile"
}

CmdName=$(basename "$0")
Syntax="${CmdName} {-1 T1} {-2 T2} [-n][-v][-c ConfigJsonFile]"
TrimScript=./trim_neck.sh

if [ -n "$TMPDIR" ]
then
	TmpDir="$TMPDIR"
else
	TmpDir=$(mktemp -d "/tmp/ashsPrepT1T2Inputs-XXXXXXX")
fi

while getopts 1:2:c:nv arg
do
	case "$arg" in
		1|2|c|n|v)
			eval "opt_${arg}='${OPTARG:=1}'"
			;;
	esac
done

shift $(($OPTIND - 1))

if [ -n "$opt_1" ]
then
	T1InputFile="$opt_1"
else
	echo "${CmdName} : Missing -1 T1InputFile" 1>&2
	echo "$Syntax" 1>&2
	exit 1
fi

if [ -n "$opt_2" ]
then
	T2InputFile="$opt_2"
else
	echo "${CmdName} : Missing -2 T1InputFile" 1>&2
	echo "$Syntax" 1>&2
	exit 2
fi

if [ -n "$opt_c" ]
then
    ConfigJsonFile="$opt_c"
fi

if [ ! -e "$ConfigJsonFile" ]
then
    echo "${CmdName} : '$ConfigJsonFile' does not exist." 1>&2
    exit 3
fi

T1NiftiFile=$(niftiIfNeeded "$T1InputFile")

sys c3d "$T1NiftiFile" -info 1>&2

IdString=$(basename "$T1NiftiFile" | sed -r 's/.gz$//; s/.zip$//; s/(.nii|.nifti|.dicom|.dcm)$//')

if jq -r '.inputs.T1w.object.tags | any("Trimmed")' "$ConfigJsonFile" | grep -q false
then
    width=$(sys c3d "$T1NiftiFile" -info-full | grep "Image Dimensions" | awk '{print $4}' | sed 's/[[,]//g')
    height=$(sys c3d "$T1NiftiFile" -info-full | grep "Image Dimensions" | awk '{print $5}' | sed 's/[[,]//g')
    sx=$(sys c3d "$T1NiftiFile" -info-full | grep "Voxel Spacing" | awk '{print $4}' | sed 's/[][,]//g')
    sy=$(sys c3d "$T1NiftiFile" -info-full | grep "Voxel Spacing" | awk '{print $5}' | sed 's/[][,]//g')
    sz=$(c3d "$T1NiftiFile" -info-full | grep "Voxel Spacing" | awk '{print $6}' | sed 's/[][,]//g')
    smax=$(python -c "print(max([$sx,$sy,$sz]))")
    smin=$(python -c "print(min([$sx,$sy,$sz]))")
    aspect_ratio_min=$(python -c "print( float($smin)/float($smax))")
    aspect_ratio_max=$(python -c "print( float($smax)/float($smin))")
    
    T1NiftiFileTrimmed=$(echo "${T1NiftiFile}" | sed 's/.nii.gz/-trimmed&/')
    if (( $width > 40 )) && (( $height > 40 )) ; then
           	if [[ $(echo "$aspect_ratio_max < 3" | bc) == 1 ]] && [[ $(echo "$aspect_ratio_min > 0.33" | bc) == 1 ]] ; then
                   	MaskDir="$TmpDir"/mask
                   	InterDir="$TmpDir"/inter
    
                   	[ -d "$MaskDir" ] || mkdir -p "$MaskDir" 
                   	[ -d "$InterDir" ] || mkdir -p "$InterDir" 
    
                   	sys "$TrimScript" -m "$MaskDir" -w "$InterDir" "$T1NiftiFile" "$T1NiftiFileTrimmed" 1>&2 || exit "$?"
           	else
                   	echo "Wrong scan input: the aspect ratio of the image is < 0.33 or > 3." 1>&2
                   	exit 4
            fi
    else
           	echo "Wrong scan input: the width or/and the height of image is inferior to 40." 1>&2
           	exit 5
    fi
else
	[ -n "$opt_v" ] && echo "${CmdName} : '$T1NiftiFile' already trimmed" 1>&2
	T1NiftiFileTrimmed=$T1NiftiFile
fi

sys c3d "$T1NiftiFileTrimmed" -info 1>&2

T1NiftiFileTrimmedSanitized="${TmpDir}/T1NiftiTrimmedSanitized.nii.gz"
cp "$T1NiftiFileTrimmed" "$T1NiftiFileTrimmedSanitized"

sys c3d "$T1NiftiFileTrimmedSanitized" -info 1>&2

if [ "$T1InputFile" = "$T2InputFile" ] 
then
	T2NiftiFile="$T1NiftiFile"
	T2NiftiFileSanitized="$T1NiftiFileTrimmedSanitized"
else
	T2NiftiFile=$(niftiIfNeeded "$T2InputFile")
	T2NiftiFileSanitized="${TmpDir}/T2NiftiSanitized.nii.gz"
	cp "$T2NiftiFile" "$T2NiftiFileSanitized"
fi

sys c3d "$T2NiftiFileSanitized" -info 1>&2

cat << EOF
$T1NiftiFile
$T2NiftiFile
$T1NiftiFileTrimmed
$T1NiftiFileTrimmedSanitized
$T2NiftiFileSanitized
EOF
